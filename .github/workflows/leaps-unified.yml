name: LEAPS Unified (produce + consume)

on:
  schedule:
    - cron: '50 17 * * 1-5'  # ≈10:50 AM PT during PDT
    - cron: '50 18 * * 1-5'  # ≈10:50 AM PT during PST
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  run-all:
    runs-on: ubuntu-latest
    env:
      DESIRED_PT_TIME: "10:50"   # quoted (has a colon)
      WINDOW_MIN: "90"           # widen tolerance to ±90 minutes
      REPO: Sevenon7/Tradier_Options       # for consumer reader
      MAX_AGE_HOURS: "24"
      RETRY_COUNT: "3"
      RETRY_SLEEP: "1.2"
      TRADIER_TOKEN: ${{ secrets.TRADIER_TOKEN }}  # for VWAP enrich + P/L builder

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Time Gate (America/Los_Angeles)
        id: timegate
        shell: bash
        run: |
          set -euo pipefail
      
          # Manual runs always allowed
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should_run=true" >> "$GITHUB_OUTPUT"
            echo "Manual dispatch -> running."
            exit 0
          fi
      
          TARGET_PT="${DESIRED_PT_TIME:-10:50}"   # HH:MM PT
          WINDOW="${WINDOW_MIN:-90}"              # ± minutes
      
          # Validate format
          if ! [[ "$TARGET_PT" =~ ^([01]?[0-9]|2[0-3]):[0-5][0-9]$ ]]; then
            echo "Bad DESIRED_PT_TIME='$TARGET_PT'; defaulting to 10:50"
            TARGET_PT="10:50"
          fi
      
          NOW_H=$(TZ=America/Los_Angeles date +%H)
          NOW_M=$(TZ=America/Los_Angeles date +%M)
          NOW_MIN=$((10#$NOW_H*60 + 10#$NOW_M))
      
          T_H=${TARGET_PT%:*}
          T_M=${TARGET_PT#*:}
          T_MIN=$((10#$T_H*60 + 10#$T_M))
      
          DIFF=$(( NOW_MIN - T_MIN ))
          [ $DIFF -lt 0 ] && DIFF=$(( -DIFF ))
      
          echo "Now PT: ${NOW_H}:${NOW_M} | Target PT: ${TARGET_PT} | |Δ|min: ${DIFF}"
      
          if [ $DIFF -le $WINDOW ]; then
            echo "should_run=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_run=false" >> "$GITHUB_OUTPUT"
            echo "Not within ±${WINDOW} minutes of target PT — fast exit."
          fi

      - name: Ensure requirements.txt
        if: steps.timegate.outputs.should_run == 'true'
        run: |
          if [ ! -f requirements.txt ]; then
            printf "requests>=2.31,<3\npandas>=2.2,<3\nzoneinfo; python_version<'3.9'\n" > requirements.txt
          fi

      - name: Setup Python
        if: steps.timegate.outputs.should_run == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install deps
        if: steps.timegate.outputs.should_run == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Mask token (log hygiene)
        if: steps.timegate.outputs.should_run == 'true'
        run: |
          if [ -n "${TRADIER_TOKEN}" ]; then echo "::add-mask::${TRADIER_TOKEN}"; fi

      - name: Skip if already ran today (UTC)
        if: steps.timegate.outputs.should_run == 'true'
        id: skipcheck
        shell: bash
        run: |
          DATE_DIR="data/$(date -u +%Y-%m-%d)"
          if [ -d "$DATE_DIR" ]; then
            echo "already=true" >> "$GITHUB_OUTPUT"
            echo "Run already completed for $DATE_DIR — skipping Producer steps."
          else
            echo "already=false" >> "$GITHUB_OUTPUT"
          fi

      # ---------- PRODUCER ----------
      - name: Run overlay script (your original)
        if: steps.timegate.outputs.should_run == 'true' && steps.skipcheck.outputs.already == 'false'
        run: |
          set -eo pipefail
          python leaps_batched_cached.py

      - name: Build Actual Option P/L (fallback-safe)
        if: steps.timegate.outputs.should_run == 'true' && steps.skipcheck.outputs.already == 'false'
        env:
          TRADIER_TOKEN: ${{ secrets.TRADIER_TOKEN }}
        run: |
          python tools/option_pl_builder.py

      - name: Enrich overlay with intraday VWAP
        if: steps.timegate.outputs.should_run == 'true' && steps.skipcheck.outputs.already == 'false'
        env:
          TRADIER_TOKEN: ${{ secrets.TRADIER_TOKEN }}
        run: |
          # prefer module-style so tools/ resolves cleanly
          python -m tools.enrich_overlay_with_vwap --overlay overlay_vwap_macd_rsi.csv

      - name: Move outputs into dated folder
        if: steps.timegate.outputs.should_run == 'true' && steps.skipcheck.outputs.already == 'false'
        id: stamp
        shell: bash
        run: |
          set -eo pipefail
          DATE_DIR="data/$(date -u +%Y-%m-%d)"
          mkdir -p "$DATE_DIR"

          [ -f overlay_vwap_macd_rsi.csv ] && mv overlay_vwap_macd_rsi.csv "$DATE_DIR/overlay_vwap_macd_rsi.csv" || : > "$DATE_DIR/overlay_vwap_macd_rsi.csv"
          [ -f option_pl.csv ]               && mv option_pl.csv               "$DATE_DIR/option_pl.csv"               || : > "$DATE_DIR/option_pl.csv"
          [ -f gapdown_above_100sma.csv ]    && mv gapdown_above_100sma.csv    "$DATE_DIR/gapdown_above_100sma.csv"    || : > "$DATE_DIR/gapdown_above_100sma.csv"

          printf "# LEAPS Overlay (%s UTC)\n\nArtifacts:\n- overlay_vwap_macd_rsi.csv\n- option_pl.csv\n- gapdown_above_100sma.csv\n" "$(date -u)" > "$DATE_DIR/SUMMARY.md"
          : > "$DATE_DIR/READY"
          echo "date_dir=$DATE_DIR" >> "$GITHUB_OUTPUT"

      - name: Write latest.json pointer
        if: steps.timegate.outputs.should_run == 'true' && steps.skipcheck.outputs.already == 'false'
        run: |
          DATE_DIR="${{ steps.stamp.outputs.date_dir }}"
          GEN_TS="$(date -u --iso-8601=seconds)"
          printf '{"date_dir":"%s","generated_utc":"%s"}\n' "$DATE_DIR" "$GEN_TS" > latest.json

      - name: Commit Producer results
        if: steps.timegate.outputs.should_run == 'true' && steps.skipcheck.outputs.already == 'false'
        run: |
          set -eo pipefail
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add latest.json "${{ steps.stamp.outputs.date_dir }}"
          git commit -m "LEAPS unified: produced ${{ steps.stamp.outputs.date_dir }} + latest.json" || true
          git push

      # ---------- CONSUMER (always runs if should_run==true) ----------
      - name: Build digest + VWAP heads-up
        if: steps.timegate.outputs.should_run == 'true'
        env:
          REPO: Sevenon7/Tradier_Options
          MAX_AGE_HOURS: "24"
          RETRY_COUNT: "3"
          RETRY_SLEEP: "1.2"
        run: |
          python consumer_latest_reader.py
          {
            echo "### Unified Output ($(date -u))"
            echo
            echo '**analysis_digest.json**'
            echo
            echo '```json'
            cat analysis_digest.json
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"

      - name: VWAP Missing Heads-up (warnings + summary)
        if: steps.timegate.outputs.should_run == 'true'
        shell: bash
        run: |
          if [ -f vwap_missing.json ]; then
            COUNT=$(python -c 'import json;print(json.load(open("vwap_missing.json")).get("count",0))')
            echo "VWAP-missing count: $COUNT"
            echo "### VWAP Missing Report" >> "$GITHUB_STEP_SUMMARY"
            if [ -f vwap_missing.md ]; then
              cat vwap_missing.md >> "$GITHUB_STEP_SUMMARY"
            fi
            if [ "$COUNT" -gt 0 ]; then
              python tools/vwap_warn.py
            fi
          else
            echo "No vwap_missing.json present."
          fi

      - name: Commit Consumer outputs
        if: steps.timegate.outputs.should_run == 'true'
        run: |
          set -eo pipefail
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add analysis_digest.json analysis_digest.md vwap_missing.json vwap_missing.md
          git commit -m "LEAPS unified: digest + VWAP report $(date -u +%Y-%m-%dT%H:%M:%SZ)" || true
          git push
